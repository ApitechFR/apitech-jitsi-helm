{{- if and .Values.overlay.enabled (eq .Values.overlay.mode "v1") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jitsi-meet.overlay.v1.fullname" . }}
  labels:
    {{- include "jitsi-meet.overlay.v1.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.overlay.v1.replicas }}
  selector:
    matchLabels:
      {{- include "jitsi-meet.overlay.v1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jitsi-meet.overlay.v1.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/web/overlay/v1/configmap.yaml") . | sha256sum }}
        {{- if not .Values.overlay.database.useExternalDatabase }}
        checksum/secret: {{ include (print $.Template.BasePath "/web/overlay/database/secret.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "for i in $(seq 1 300); do nc -zvw1 ${MARIADB_SERVER} 3306 && exit 0 || sleep 3; done; exit 1"]
          {{- if not .Values.overlay.database.useExternalDatabase }}
          envFrom:
          - configMapRef:
              name: {{ include "jitsi-meet.overlay.v1.fullname" . }}
          {{- end }}
      containers:
        # Custom jitsi overlay
        - name: overlay
          image: "{{ .Values.overlay.v1.image.repository }}:{{ .Values.overlay.v1.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.overlay.v1.image.pullPolicy | default "IfNotPresent" }}
          envFrom:
          - configMapRef:
              name: {{ include "jitsi-meet.overlay.v1.fullname" . }}
          {{- if not .Values.overlay.database.useExternalDatabase }}
          - secretRef:
              name: {{ include "jitsi-meet.overlay.database.fullname" . }}-secret
          {{- end }}
          env:
            - name: "TZ"
              value: "{{ .Values.tz }}"
          volumeMounts:
            - name: shared-meet
              mountPath: /usr/share/jitsi-meet
              readOnly: true
          {{- if .Values.overlay.v1.assetsConfigmap }}
            - name: {{ .Values.overlay.v1.assetsConfigmap }}
              {{- /* Dans le code de la surcouche, si NODE_ENV est en production il faut monter dans /app/dist/public */}}
              {{- if eq $.Values.overlay.v1.envValues.NODE_ENV "development" }}
              mountPath: /app/public/pictures/client
              {{- else }}
              mountPath: /app/dist/public/pictures/client
              {{- end }}
              readOnly: true
          {{- else }}
          {{ range $path, $_ := .Files.Glob "assets/**" }}
            - name: assets
              {{- /* Dans le code de la surcouche, si NODE_ENV est en production il faut monter dans /app/dist/public */}}
              {{- if eq $.Values.overlay.v1.envValues.NODE_ENV "development" }}
              mountPath: /app/public/pictures/client/{{ base $path }}
              {{- else }}
              mountPath: /app/dist/public/pictures/client/{{ base $path }}
              {{- end }}
              subPath: {{ base $path }}
              readOnly: true
          {{- end }}
          {{- end }}
          {{- with .Values.overlay.v1.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000

      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "jitsi-meet.web.fullname" . }}-proxy
        - name: shared-meet
          persistentVolumeClaim:
            claimName: {{ include "jitsi-meet.web.fullname" . }}-shared-meet
        {{- if .Values.overlay.v1.assetsConfigmap }}
        - name: {{ .Values.overlay.v1.assetsConfigmap }}
          configMap:
            name: {{ .Values.overlay.v1.assetsConfigmap }}
        {{- else }}
        - name: assets
          configMap:
            name: {{ include "jitsi-meet.overlay.v1.fullname" . }}-assets
            items:
            {{ range $path, $_ := .Files.Glob (printf "%s/**" (.Values.overlay.v1.assets.path)) }}
              - key: {{ base $path }}
                path: {{ base $path }}
            {{- end }}
        {{- end }}

      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}