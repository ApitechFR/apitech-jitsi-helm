{{- range $shard, $e := until (int $.Values.jvb.replicaCount) }}
---
{{- if or (and (kindIs "invalid" $.Values.jvb.service.enabled) (not (or $.Values.jvb.useHostPort $.Values.jvb.useHostNetwork))) $.Values.jvb.service.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "jitsi-meet.jvb.fullname" $ }}-{{ $shard }}
  annotations:
  {{- range $key, $value := $.Values.jvb.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  labels:
    {{- include "jitsi-meet.jvb.labels" $ | nindent 4 }}
spec:
  type: {{ $.Values.jvb.service.type }}
  loadBalancerIP: {{ $.Values.jvb.service.externalIPsPrefix }}.{{ add $.Values.jvb.service.firstExternalIPLastOctet $shard }}

  ports:
    # - port: {{ $.Values.jvb.nodeportPrefix }}{{ printf "%02d" $shard }}
    #   targetPort: {{ $.Values.jvb.nodeportPrefix }}{{ printf "%02d" $shard }}
    #   nodePort: {{ $.Values.jvb.nodeportPrefix }}{{ printf "%02d" $shard }}
    #   protocol: UDP
    #   name: rtp-udp

    - port: {{ $.Values.jvb.service.udpPort }}
      targetPort: {{ $.Values.jvb.service.udpPort }}
      protocol: UDP
      name: rtp-udp
      
    # {{- with $.Values.jvb.service.extraPorts }}
    # {{ toYaml $ | indent 4 | trim }}
    # {{- end }}


  externalTrafficPolicy: {{ $.Values.jvb.service.externalTrafficPolicy }}
  selector:
    jvb-shard: {{ printf "%s-%d" (include "jitsi-meet.jvb.fullname" $) $shard }}
    {{- include "jitsi-meet.jvb.selectorLabels" $ | nindent 4 }}
{{- end }}
{{ end -}}



### TODO
######### Le but est de transformer le replicaCount (qui actuellement crée juste 2 pods JVB) en une valeur shardCount
######### 2 replicas = 2 JVBs + 2 services JVBS. 
#########  Les deux pods sont bien créés, mais les deux services non : un seul est créé. 
######### On dirait que Helm écrase le service déjà créé par le second service.
######### Ca marche déjà un peu 